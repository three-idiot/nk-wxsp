<style lang="less">
  page {
    background: #f4f4f4;
  }
  .refund-apply {
    width: 100%;
    height: auto;
    /*background: #fff;*/
  }
  .refund-content {
    background: #fff;
    .choose-tit {
      padding: 30rpx;
      font-size: 28rpx;
      color: #353535;
    }
  }

  .refund-num {
    background: #fff;
    padding: 30rpx;
    margin-top: 30rpx;
    display: flex;
    .left {
      width: 476rpx;
      .left-top {
        .refund-text {
          font-size: 28rpx;
          color: #353535;
        }
        .num-container {
          margin-left: 24rpx;
          font-size: 32rpx;
          color: #ff3941;
          text {
            font-size: 24rpx;
            color: #353535;
          }
        }
      }
      .left-bottom {
        font-size: 24rpx;
        color: #888888;
        margin-top: 10rpx;
      }
    }
    .right {
      flex:1;
      font-size: 28rpx;
      color: #1DADFF;
      text-align: right;
      position: relative;
      text {
        position: absolute;
        top:50%;
        transform: translate(0,-50%);
        right: 0;
      }
    }
  }
  .choose-people,.choose-reason {
    padding: 30rpx;
    padding-top: 0;
    label {
      position: relative;
      display: flex;
      flex-direction: row;
      font-size: 28rpx;
      color: #353535;
      height: 40rpx;
      line-height: 40rpx;
      margin-top: 40rpx;
      checkbox {
        zoom: 50%;
        margin-right: 30rpx;
      }
    }
    label:nth-child(1) {
      margin-top: 0;
    }
  }

  .refund-reason {
    background: #fff;
    margin-top: 30rpx;
    .reason-tit {
      padding: 30rpx;
      view:nth-child(1) {
        font-size: 28rpx;
        color: #353535;
      }
      view:nth-child(2) {
        font-size: 24rpx;
        color: #888888;
        margin-top: 10rpx;
      }
    }
  }

  .refund-btn {
    position: fixed;
    left:0;
    bottom: 0;
    width: 100%;
    height: 98rpx;
    line-height: 98rpx;
    font-size: 34rpx;
    color: #FFFFFF;
    letter-spacing: 0;
    text-align: center;
    background: #387DFF;
  }


</style>
<template>
  <view class="refund-apply">
    <view class="refund-content">
      <view class="choose-tit">
        选择退款内容
      </view>
      <view class="choose-people">
        <checkbox-group bindchange="peopleChange">
          <label class="checkbox" wx:for="{{items}}">
            <checkbox value="{{item.name}}" checked="{{item.checked}}"/>{{item.value}}
          </label>
        </checkbox-group>
      </view>
    </view>

    <view class="refund-num">
      <view class="left">
        <view class="left-top">
          <text class="refund-text">退款金额</text>
          <text class="num-container"><text>￥</text>10000</text>
        </view>
        <view class="left-bottom">
          原路退回（3-5个工作日内退款到原支付方）
        </view>
      </view>
      <view class="right">
        <text>退款说明</text>
      </view>
    </view>

    <view class="refund-reason">
      <view class="reason-tit">
        <view>退款原因</view>
        <view>为了帮助我们做的更好，请提交退款原因（至少选一项）</view>
      </view>
      <view class="choose-reason">
        <checkbox-group bindchange="reasonChange">
          <label class="checkbox" wx:for="{{items2}}">
            <checkbox value="{{item.name}}" checked="{{item.checked}}"/>{{item.value}}
          </label>
        </checkbox-group>
      </view>
    </view>

    <view class="refund-btn">
      申请退款
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'

  export default class RefundApply extends wepy.page {
    config = {
      navigationBarTitleText: '申请退款'
    }
    components = {

    }
    data = {
      items: [
        {name: 'USA', value: '美国'},
        {name: 'CHN', value: '中国', checked: 'true'},
        {name: 'BRA', value: '巴西'},
      ],
      items2: [
        {name: '买多1', value: '买多了'},
        {name: '买多2', value: '中买多了国', checked: 'true'},
        {name: '买多3', value: '巴买多了西'},
      ],
    }
    computed = {

    }
    methods = {
      peopleChange() {
        console.log(1111);
      },
      reasonChange() {
        console.log(222);
      }
    }

    events = {

    }

    onLoad() {
      let self = this

    }
  }
</script>
